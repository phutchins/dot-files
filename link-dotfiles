#!/bin/bash
# Link all dotfiles for appropriate OS to home directory

# Add option to nuke and overwrite existing dotfiles

platform='unknown'
unamestr=`uname`
if [[ "$unamestr" == 'Linux' ]]; then
   platform='linux'
elif [[ "$unamestr" == 'Darwin' ]]; then
   platform='osx'
fi

if [[ $platform == 'linux' ]]; then
  # Do Linux type things
  echo "Linking DotFiles for Linux..."
  echo ""
  CWD=$(pwd)
  echo "Removing old links and backing up non links..."
  if [ -h "$HOME/.tmux-linux" ] ; then rm $HOME/.tmux-linux ; else  mv $HOME/.tmux-linux $HOME/.tmux-linux.bak ; fi

  echo "Creating new links..."
  ln -s $CWD/tmux-linux $HOME/.tmux-linux
elif [[ $platform == 'osx' ]]; then
  # Do OSX type things
  echo "Linking DotFiles for OSX..."
  echo ""
  CWD=$(pwd)
  echo "Removing old links and backing up non links..."
  if [ -h "$HOME/.tmux-osx" ] ; then rm $HOME/.tmux-osx ; else  mv $HOME/.tmux-osx $HOME/.tmux-osx.bak ; fi

  echo "Creating new links..."
  ln -s $CWD/tmux-osx $HOME/.tmux-osx
else
  echo "Unable to detect OS or OS not supported..."
  echo ""
fi

echo "Linking OS agnostic DotFiles"
echo "Removing old links and backing up non links"
if [ -h "$HOME/.config" ] ; then rm $HOME/.config ; else mv $HOME/.config $HOME/.config.bak ; fi
if [ -h "$HOME/.tmuxinator" ] ; then rm $HOME/.tmuxinator ; else mv $HOME/.tmuxinator $HOME/.tmuxinator.bak ; fi
if [ -h "$HOME/.tmux.conf" ] ; then rm $HOME/.tmux.conf ; else  mv $HOME/.tmux.conf $HOME/.tmux.conf.bak ; fi
if [ -h "$HOME/.vimrc" ] ; then rm $HOME/.vimrc ; else  mv $HOME/.vimrc $HOME/.vimrc.bak ; fi
if [ -h "$HOME/.bash_profile" ] ; then rm $HOME/.bash_profile ; else  mv $HOME/.bash_profile $HOME/.bash_profile.bak ; fi
if [ -h "$HOME/.bashrc" ] ; then rm $HOME/.bashrc ; else  mv $HOME/.bashrc $HOME/.bashrc.bak ; fi
if [ -h "$HOME/.bash_aliases" ] ; then rm $HOME/.bash_aliases ; else  mv $HOME/.bash_aliases $HOME/.bash_aliases.bak ; fi
if [ -h "$HOME/.irssi" ] ; then rm $HOME/.irssi ; else mv $HOME/.irssi $HOME/.irssi.bak ; fi
if [ -h "$HOME/.gitconfig" ] ; then rm $HOME/.gitconfig ; else mv $HOME/.gitconfig $HOME/.gitconfig.bak ; fi

echo "Creating new links..."
ln -s $CWD/config $HOME/.config
ln -s $CWD/tmuxinator $HOME/.tmuxinator
ln -s $CWD/tmux.conf $HOME/.tmux.conf
ln -s $CWD/vimrc $HOME/.vimrc
ln -s $CWD/bash_profile $HOME/.bash_profile
ln -s $CWD/bashrc $HOME/.bashrc
ln -s $CWD/bash_aliases $HOME/.bash_aliases
ln -s $CWD/irssi $HOME/.irssi
ln -s $CWD/gitconfig $HOME/.gitconfig
