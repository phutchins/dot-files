#!/bin/bash
# Link all dotfiles for appropriate OS to home directory

# Add option to nuke and overwrite existing dotfiles

agnostic_links=( ".config/powerline" ".tmuxinator" ".tmux.conf" ".vimrc" ".bash_profile" ".bashrc" ".bash_aliases" ".irssi" ".gitconfig" )
linux_links=( ".tmux-linux")
osx_links=( ".tmux-osx" )

mkdir $HOME/.config

platform='unknown'
unamestr=`uname`
if [[ "$unamestr" == 'Linux' ]]; then
   platform='linux'
elif [[ "$unamestr" == 'Darwin' ]]; then
   platform='osx'
fi

if [[ $platform == 'osx' ]]; then
  rsync -rtv ~/github/dot-files/fonts/* ~/Library/Fonts/
  #cp -r ~/github/dot-files/fonts/* ~/Library/Fonts/
fi

if [[ $platform == 'linux' ]]; then
  # Do Linux type things
  echo "Linking DotFiles for Linux..."
  echo ""
  CWD=$(pwd)
  echo "Removing old links and backing up non links..."
  for FILE in "${linux_links[@]}"
  do
    :
    if [ -h "$HOME/$FILE" ] ; then
      rm $HOME/$FILE ;
    elif  [ -e "$HOME/$FILE" ] ; then
      echo "$HOME/$FILE already exists and is not a link so backing it up to ${FILE}.bak" ;
      mv $HOME/$FILE $HOME/${FILE}.bak ;
    fi
  done

  echo "Creating new links..."
  ln -s $CWD/tmux-linux $HOME/.tmux-linux
elif [[ $platform == 'osx' ]]; then
  # Do OSX type things
  echo "Linking DotFiles for OSX..."
  echo ""
  CWD=$(pwd)
  echo "Removing old links and backing up non links..."
  for FILE in "${osx_links[@]}"
  do
    :
    if [ -h "$HOME/$FILE" ] ; then
      rm $HOME/$FILE ;
    elif  [ -e "$HOME/$FILE" ] ; then
      echo "$HOME/$FILE already exists and is not a link so backing it up to ${FILE}.bak" ;
      mv $HOME/$FILE $HOME/${FILE}.bak ;
    fi
  done

  echo "Creating new links..."
  ln -s $CWD/tmux-osx $HOME/.tmux-osx
else
  echo "Unable to detect OS or OS not supported..."
  echo ""
fi

echo "Linking OS agnostic DotFiles"
echo "Removing old links and backing up non links"

for FILE in "${agnostic_links[@]}"
do
  :
  if [ -h "$HOME/$FILE" ] ; then
    rm $HOME/$FILE ;
  elif  [ -e "$HOME/$FILE" ] ; then
    echo "$HOME/$FILE already exists and is not a link so backing it up to ${FILE}.bak" ;
    mv $HOME/$FILE $HOME/${FILE}.bak ;
  fi
done

echo "Creating new links..."
ln -s $CWD/config/powerline $HOME/.config/powerline
ln -s $CWD/tmuxinator $HOME/.tmuxinator
ln -s $CWD/tmux.conf $HOME/.tmux.conf
ln -s $CWD/vimrc $HOME/.vimrc
ln -s $CWD/bash_profile $HOME/.bash_profile
ln -s $CWD/bashrc $HOME/.bashrc
ln -s $CWD/bash_aliases $HOME/.bash_aliases
ln -s $CWD/irssi $HOME/.irssi
ln -s $CWD/gitconfig $HOME/.gitconfig
